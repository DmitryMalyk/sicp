Бен Битобор придумал тест для проверки интерпретатора на то, с каким порядком вычислений он работает, аппликативным или нормальным. Бен определяет такие две процедуры:

(define (p) (p))
(define (test x y)
  (if (= x 0)
0 y))

Затем он вычисляет выражение
(test 0 (p))

Какое поведение увидит Бен, если интерпретатор использует аппликативный порядок вычислений? 
Какое поведение он увидит, если интерпретатор использует нормальный порядок? Объясните Ваш ответ. 
(Предполагается, что правило вычисления особой формы if одинаково независимо от того, какой порядок вычислений используется. Сначала вычисляется выражение-предикат, и результат определяет, нужно ли вычислять выражение-следствие или альтернативу.)

Ответ:
При аппликативном порядке вычисления потребуется сразу вычислить два аргумента процедуры test. 
При этом возникнут проблемы с вычислением аргумента y - процедура (define (p) (p)) подразумевает бесконечно-рекурсивное присвоение значения p.

При нормальном порядке вычисления аргументов произойдут только тогда, когда понадобится их значение. 
В таком случая вычисление второго аргумента - y - не произойдет.
Из-за порядка вычисления if сначала вычислится предикат, а затем - выражение-следствие, т.к. условие предиката x=0 срабатывает. Таким образом результатом выполнения if и всей процедуры test будет возврат 0.